/*! For license information please see index.677406ec2e1f6c4419fd.js.LICENSE.txt */
(()=>{"use strict";var e={"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/app.scss":(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var r=n("./node_modules/css-loader/dist/runtime/sourceMaps.js"),s=n.n(r),a=n("./node_modules/css-loader/dist/runtime/api.js"),i=n.n(a)()(s());i.push([e.id,'@charset "UTF-8";\n* {\n  font-family: "Roboto", sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  line-height: 1.25;\n}\n\n:root {\n  --brand: #2196f3;\n  --primary: #fff;\n  --secondary: #000;\n  --tertiary: #ddd;\n  --medium: 1.25rem;\n}\n\nbody {\n  display: grid;\n  grid-gap: 1rem;\n  background: var(--primary);\n  color: var(--secondary);\n  min-height: 100vh;\n  grid-template-rows: auto calc(100% - 9em) auto;\n}\n\n.bold {\n  font-weight: bold;\n}\n\na {\n  color: var(--secondary);\n  text-underline-position: under;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3rem;\n  box-shadow: 0 4px 12px 0 var(--tertiary);\n  font-size: var(--medium);\n  color: var(--brand);\n  background-color: aliceblue;\n}\n\n.wrapper {\n  margin: 0 1.5rem;\n  display: grid;\n  align-content: flex-start;\n}\n\narticle {\n  justify-self: center;\n  margin: 2rem;\n  font-size: 0.825rem;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: 10rem repeat(31, minmax(37px, 1fr));\n  border: 0.5px solid var(--secondary);\n}\n.grid > div {\n  padding: 0.5rem;\n  border: 0.5px solid var(--secondary);\n  min-height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.grid .delete-task {\n  color: var(--secondary);\n  cursor: pointer;\n}\n.grid .datetask {\n  padding: 0 0.5rem;\n  cursor: pointer;\n  justify-content: center;\n}\n.grid .datetask:focus {\n  border: 0.5px solid var(--brand);\n}\n.grid .datetask[aria-checked=true]:after {\n  content: " ●";\n  font-size: 30px;\n}\n\n.cta-section {\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem 0 2rem 0;\n}\n.cta-section input {\n  width: 10rem;\n  margin-right: 0.25rem;\n  border: 1px solid var(--secondary);\n  padding: 2px;\n}\n.cta-section a {\n  margin-left: 1rem;\n}\n.cta-section a {\n  text-decoration: none;\n  padding: 0 2px;\n  border: 1px solid var(--secondary);\n}\n\ninput[type=button] {\n  margin: 0 1rem;\n  padding: 0.5rem;\n  background-color: var(--brand);\n  color: var(--primary);\n}\n\nfooter {\n  background-color: aliceblue;\n  margin-top: 1rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1rem;\n  grid-column-gap: 1rem;\n  justify-items: center;\n  font-size: 0.825rem;\n  height: 3rem;\n}\n\n@media screen and (max-width: 768px) {\n  main {\n    max-width: 100%;\n    overflow: scroll;\n  }\n\n  .grid {\n    border: none;\n  }\n\n  .cta-section {\n    flex-direction: column;\n  }\n  .cta-section a {\n    margin-right: 1rem;\n    margin-left: 0;\n  }\n  .cta-section > div {\n    margin-top: 1rem;\n    display: flex;\n  }\n  .cta-section > div:nth-child(1) input {\n    flex-grow: 1;\n  }\n  .cta-section > div:nth-child(2) {\n    flex-direction: column;\n  }\n  .cta-section > div:nth-child(2) a {\n    text-align: center;\n    margin-top: 1rem;\n  }\n}\n@media print {\n  @page {\n    size: landscape;\n    margin: 0;\n  }\n  .hide-print {\n    display: none;\n  }\n\n  .invisible-print {\n    visibility: hidden;\n  }\n\n  footer a::after {\n    content: "  (" attr(href) ")";\n  }\n}',"",{version:3,sources:["webpack://./src/app.scss"],names:[],mappings:"AAAA,gBAAgB;AAAhB;EACE,iCAAA;EACA,SAAA;EACA,UAAA;EACA,sBAAA;EACA,iBAAA;AAEF;;AACA;EACE,gBAAA;EACA,eAAA;EACA,iBAAA;EACA,gBAAA;EACA,iBAAA;AAEF;;AACA;EACE,aAAA;EACA,cAAA;EACA,0BAAA;EACA,uBAAA;EACA,iBAAA;EACA,8CAAA;AAEF;;AACA;EACE,iBAAA;AAEF;;AACA;EACE,uBAAA;EACA,8BAAA;AAEF;;AACA;EACE,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,YAAA;EACA,wCAAA;EACA,wBAAA;EACA,mBAAA;EACA,2BAAA;AAEF;;AACA;EACE,gBAAA;EACA,aAAA;EACA,yBAAA;AAEF;;AACA;EACE,oBAAA;EACA,YAAA;EACA,mBAAA;AAEF;;AACA;EACE,aAAA;EACA,0DAAA;EACA,oCAAA;AAEF;AADE;EACE,eAAA;EACA,oCAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;EACA,8BAAA;AAGJ;AADE;EACE,uBAAA;EACA,eAAA;AAGJ;AADE;EACE,iBAAA;EACA,eAAA;EACA,uBAAA;AAGJ;AAFI;EACE,gCAAA;AAIN;AAFI;EACE,aAAA;EACA,eAAA;AAIN;;AACA;EACE,aAAA;EACA,8BAAA;EACA,qBAAA;AAEF;AADE;EACE,YAAA;EACA,qBAAA;EACA,kCAAA;EACA,YAAA;AAGJ;AADE;EACE,iBAAA;AAGJ;AADE;EACE,qBAAA;EACA,cAAA;EACA,kCAAA;AAGJ;;AACA;EACE,cAAA;EACA,eAAA;EACA,8BAAA;EACA,qBAAA;AAEF;;AACA;EACE,2BAAA;EACA,gBAAA;EACA,aAAA;EACA,qCAAA;EACA,aAAA;EACA,qBAAA;EACA,qBAAA;EACA,mBAAA;EACA,YAAA;AAEF;;AACA;EACE;IACE,eAAA;IACA,gBAAA;EAEF;;EAAA;IACE,YAAA;EAGF;;EADA;IACE,sBAAA;EAIF;EAFE;IACE,kBAAA;IACA,cAAA;EAIJ;EAFE;IACE,gBAAA;IACA,aAAA;EAIJ;EAFM;IACE,YAAA;EAIR;EADI;IACE,sBAAA;EAGN;EAFM;IACE,kBAAA;IACA,gBAAA;EAIR;AACF;AAEA;EACE;IACE,eAAA;IACA,SAAA;EAAF;EAEA;IACE,aAAA;EAAF;;EAEA;IACE,kBAAA;EACF;;EAEE;IACE,6BAAA;EACJ;AACF",sourcesContent:['* {\n  font-family: "Roboto", sans-serif;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  line-height: 1.25;\n}\n\n:root {\n  --brand: #2196f3;\n  --primary: #fff;\n  --secondary: #000;\n  --tertiary: #ddd;\n  --medium: 1.25rem;\n}\n\nbody {\n  display: grid;\n  grid-gap: 1rem;\n  background: var(--primary);\n  color: var(--secondary);\n  min-height: 100vh;\n  grid-template-rows: auto calc(100% - 9em) auto;\n}\n\n.bold {\n  font-weight: bold;\n}\n\na {\n  color: var(--secondary);\n  text-underline-position: under;\n}\n\nheader {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3rem;\n  box-shadow: 0 4px 12px 0 var(--tertiary);\n  font-size: var(--medium);\n  color: var(--brand);\n  background-color: aliceblue;\n}\n\n.wrapper {\n  margin: 0 1.5rem;\n  display: grid;\n  align-content: flex-start;\n}\n\narticle {\n  justify-self: center;\n  margin: 2rem;\n  font-size: 0.825rem;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: 10rem repeat(31, minmax(37px, 1fr));\n  border: 0.5px solid var(--secondary);\n  > div {\n    padding: 0.5rem;\n    border: 0.5px solid var(--secondary);\n    min-height: 2.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .delete-task {\n    color: var(--secondary);\n    cursor: pointer;\n  }\n  .datetask {\n    padding: 0 0.5rem;\n    cursor: pointer;\n    justify-content: center;\n    &:focus {\n      border: 0.5px solid var(--brand);\n    }\n    &[aria-checked="true"]:after {\n      content: " \\25CF";\n      font-size: 30px;\n    }\n  }\n}\n\n.cta-section {\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem 0 2rem 0;\n  input {\n    width: 10rem;\n    margin-right: 0.25rem;\n    border: 1px solid var(--secondary);\n    padding: 2px;\n  }\n  a {\n    margin-left: 1rem;\n  }\n  a {\n    text-decoration: none;\n    padding: 0 2px;\n    border: 1px solid var(--secondary);\n  }\n}\n\ninput[type="button"] {\n  margin: 0 1rem;\n  padding: 0.5rem;\n  background-color: var(--brand);\n  color: var(--primary);\n}\n\nfooter {\n  background-color: aliceblue;\n  margin-top: 1rem;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 1rem;\n  grid-column-gap: 1rem;\n  justify-items: center;\n  font-size: 0.825rem;\n  height: 3rem;\n}\n\n@media screen and (max-width: 768px) {\n  main {\n    max-width: 100%;\n    overflow: scroll;\n  }\n  .grid {\n    border: none;\n  }\n  .cta-section {\n    flex-direction: column;\n\n    a {\n      margin-right: 1rem;\n      margin-left: 0;\n    }\n    > div {\n      margin-top: 1rem;\n      display: flex;\n      &:nth-child(1) {\n        input {\n          flex-grow: 1;\n        }\n      }\n      &:nth-child(2) {\n        flex-direction: column;\n        a {\n          text-align: center;\n          margin-top: 1rem;\n        }\n      }\n    }\n  }\n}\n\n@media print {\n  @page {\n    size: landscape;\n    margin: 0;\n  }\n  .hide-print {\n    display: none;\n  }\n  .invisible-print {\n    visibility: hidden;\n  }\n  footer {\n    a::after {\n      content: "  (" attr(href) ")";\n    }\n  }\n}\n'],sourceRoot:""}]);const o=i},"./node_modules/css-loader/dist/runtime/api.js":e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,s,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var A=this[o][0];null!=A&&(i[A]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),t.push(l))}},t}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(s," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},"./src/app.scss":(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var r=n("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),s=n.n(r),a=n("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),i=n.n(a),o=n("./node_modules/style-loader/dist/runtime/insertBySelector.js"),A=n.n(o),d=n("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),l=n.n(d),c=n("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),u=n.n(c),m=n("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),f=n.n(m),p=n("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/app.scss"),E={};E.styleTagTransform=f(),E.setAttributes=l(),E.insert=A().bind(null,"head"),E.domAPI=i(),E.insertStyleElement=u(),s()(p.default,E);const h=p.default&&p.default.locals?p.default.locals:void 0},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],o=0;o<e.length;o++){var A=e[o],d=r.base?A[0]+r.base:A[0],l=a[d]||0,c="".concat(d," ").concat(l);a[d]=l+1;var u=n(c),m={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(t[u].references++,t[u].updater(m)):t.push({identifier:c,updater:s(m,r),references:1}),i.push(c)}return i}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var a=r(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var o=n(a[i]);t[o].references--}for(var A=r(e,s),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=A}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,s=n.media,a=n.sourceMap;s?e.setAttribute("media",s):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},"./src/CONSTANTS.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});const r={storeName:"monthbits",firstCellLabel:"Habits"}},"./src/Collection.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var r=n("./src/models/Date.model.js"),s=n("./src/models/Task.model.js"),a=n("./src/Utils.js");class i{#e;#t;constructor(e){this.store=e,this.#e=[],this.#t=[];const t=e.getTasks(),n=e.getDates();this.createTaskModels(t),this.createDateModels(n)}createTaskModels=e=>{for(let{name:t,color:n}of e){const e=new s.default(t);e.setColor(n),this.#e.push(e)}};createDateModels=e=>{if(a.default.isEmpty(e)){let e=31;for(;e>0;)this.#t.push(new r.default),e--}else for(let t of e)this.#t.push(new r.default(t))};clear=()=>{for(const e of this.getDates())for(const[t]of Object.entries(e))t.startsWith("tsk")&&(e[t]=!1)};removeTask=e=>{this.#e=this.getTasks().filter((t=>t.id!==e));for(const t of this.getDates())delete t[e]};reset=()=>{this.store.clear()};getDates=()=>this.#t;getTasks=()=>this.#e;getDate=e=>this.getDates().filter((t=>t.day===e))[0];addTask=e=>this.#e.push(new s.default(e));storeDates=()=>this.store.storeDates(this.#t);storeTasks=()=>this.store.storeTasks(this.#e)}},"./src/Controller.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("./src/Utils.js");class s{constructor(e,t){this.view=e,this.collection=t,this.render(),this.initOneTimeListeners()}initOneTimeListeners(){this.initAddTaskListener(),this.initClearListener(),this.initResetListener()}initListeners(){this.initDateTaskClickListener(),this.initDeleteTaskListener()}initAddTaskListener(){const e=r.default.qs("#add-a-task"),t=r.default.qs("#add-a-task-input"),n=e=>{e.preventDefault(),this.collection.addTask(t.value),t.value="",this.render()};r.default.$onEnter(t,n),r.default.$on(e,"click",n)}initClearListener(){const e=r.default.qs("#clear");r.default.$on(e,"click",(e=>{e.preventDefault(),this.collection.clear(),this.render()}))}initResetListener(){const e=r.default.qs("#reset");r.default.$on(e,"click",(e=>{e.preventDefault(),this.collection.reset(),window.location.reload()}))}initDateTaskClickListener(){const e=r.default.qsAll(".datetask");Array.from(e).forEach((e=>{r.default.$on(e,"click",(e=>{e.preventDefault();const{target:t}=e,n=parseInt(t.getAttribute("day"),10),r=t.getAttribute("taskId");this.collection.getDate(n).toggleTaskStatus(r),this.render()}))}))}initDeleteTaskListener(){const e=r.default.qsAll(".delete-task");Array.from(e).forEach((e=>{r.default.$on(e,"click",(e=>{e.preventDefault();const{target:t}=e,n=t.parentNode.getAttribute("taskId");this.collection.removeTask(n),this.render()}))}))}render(){this.view.render(),this.collection.storeDates(),this.collection.storeTasks(),this.initListeners()}}},"./src/Store.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});class r{constructor(e){this.name=e}storeDates(e=[]){localStorage.setItem(`${this.name}-dates`,JSON.stringify(e))}storeTasks(e=[]){localStorage.setItem(`${this.name}-tasks`,JSON.stringify(e))}getTasks(){return JSON.parse(localStorage.getItem(`${this.name}-tasks`)||"[]")}getDates(){return JSON.parse(localStorage.getItem(`${this.name}-dates`)||"[]")}clear(){this.storeDates(),this.storeTasks()}}},"./src/Utils.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});class r{static qs=e=>document.querySelector(e);static qsAll=e=>document.querySelectorAll(e);static isEmpty=e=>!e||null==e||Array.isArray(e)&&0===e.length||"object"==typeof e&&0===Object.keys(e).length;static appendTextEl=(e,t,n={})=>{const r=document.createElement("div");r.innerHTML=t;for(let e of Object.entries(n))r.setAttribute(e[0],e[1]);return e.appendChild(r),r};static $on(e,t,n,r){e.addEventListener(t,n,!!r),"click"===t&&e.addEventListener("keypress",(e=>n(e)),!!r)}static $off(e,t,n,r){e.removeEventListener(t,n,!!r)}static $onEnter(e,t,n){e.addEventListener("keypress",(e=>"Enter"===e.key&&t(e)),!!n)}static getRandomColor(){let e="#";for(var t=0;t<6;t++)e+=Math.floor(10*Math.random());return e}}},"./src/View.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>a});var r=n("./src/CONSTANTS.js"),s=n("./src/Utils.js");n("./src/app.scss");class a{constructor(e){this.collection=e}renderDates=()=>{const e=this.collection.getDates(),t=s.default.qs("#container");s.default.appendTextEl(t,r.default.firstCellLabel,{class:"bold"});for(const{day:n}of e)s.default.appendTextEl(t,n)};renderTasks=()=>{const e=this.collection.getTasks(),t=this.collection.getDates(),n=s.default.qs("#container");for(const{name:r,id:a,color:i}of e){const e=s.default.appendTextEl(n,r||"&nbsp;",{style:`color: ${i}`,class:"task",taskId:`${a}`});s.default.appendTextEl(e,"x",{class:"delete-task hide-print",tabIndex:"0","aria-label":`delete ${r}`});for(const e of t){const{day:t}=e,o=!!e[a];s.default.appendTextEl(n,"",{taskId:`${a}`,day:`${t}`,class:"datetask",tabIndex:"0",role:"checkbox",style:`color: ${o?i:"#fff"}`,"aria-checked":o,"aria-label":`${r} for Day ${t}`})}}};render=()=>{s.default.qs("#container").innerHTML="",this.renderDates(),this.renderTasks()}}},"./src/models/Date.model.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("./src/Utils.js");class s{static count=0;constructor(e={}){if(this.id="dt"+s.count++,this.day=s.count,r.default.isEmpty(e))this.notes="";else for(const[t,n]of Object.entries(e))this[t]=n}toggleTaskStatus=e=>{this[e]=!this[e]}}},"./src/models/Task.model.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n("./src/Utils.js");class s{static count=0;constructor(e){this.name=e;const{count:t}=s;this.id=`tsk${t}`,this.setColor(r.default.getRandomColor()),s.count++}setColor(e){this.color=e}}}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{n.r(r),n.d(r,{default:()=>o});var e=n("./src/Collection.js"),t=n("./src/CONSTANTS.js"),s=n("./src/Controller.js"),a=n("./src/Store.js"),i=n("./src/View.js");class o{constructor(){this.store=new a.default(t.default.storeName),this.collection=new e.default(this.store),this.view=new i.default(this.collection),this.controller=new s.default(this.view,this.collection)}}window,new o})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,